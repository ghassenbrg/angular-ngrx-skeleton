{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { AccountStoreActions } from 'src/app/app-store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport let AccountAddComponent = /*#__PURE__*/(() => {\n  class AccountAddComponent {\n    constructor(fb, store) {\n      this.fb = fb;\n      this.store = store;\n    }\n    ngOnInit() {\n      this.accountForm = this.fb.group({\n        firstname: [\"\", Validators.required],\n        lastname: [\"\", Validators.required],\n        email: [\"\", Validators.required]\n      });\n    }\n    createAccount() {\n      const newAccount = {\n        firstname: this.accountForm.get(\"firstname\").value,\n        lastname: this.accountForm.get(\"lastname\").value,\n        email: this.accountForm.get(\"email\").value\n      };\n      this.store.dispatch(new AccountStoreActions.CreateAccount(newAccount));\n      this.accountForm.reset();\n    }\n  }\n  AccountAddComponent.ɵfac = function AccountAddComponent_Factory(t) {\n    return new (t || AccountAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n  };\n  AccountAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccountAddComponent,\n    selectors: [[\"app-account-add\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"content\"], [1, \"form-inline\", \"mb-4\", 3, \"formGroup\", \"submit\"], [\"for\", \"Name\", 1, \"sr-only\"], [1, \"input-group\", \"mb-2\", \"mr-sm-2\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"placeholder\", \"Firstname\", 1, \"form-control\"], [\"for\", \"Phone\", 1, \"sr-only\"], [\"type\", \"text\", \"formControlName\", \"lastname\", \"placeholder\", \"Lastname\", 1, \"form-control\"], [\"for\", \"Address\", 1, \"sr-only\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", \"mb-2\"]],\n    template: function AccountAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Add New Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function AccountAddComponent_Template_form_submit_3_listener() {\n          return ctx.createAccount();\n        });\n        i0.ɵɵelementStart(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Firstname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"lastname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 7);\n        i0.ɵɵtext(13, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Add Account\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return AccountAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}