{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { AccountStoreActions, AccountStoreSelectors } from 'src/app/app-store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport let AccountEditComponent = /*#__PURE__*/(() => {\n  class AccountEditComponent {\n    constructor(fb, store) {\n      this.fb = fb;\n      this.store = store;\n    }\n    ngOnInit() {\n      this.accountForm = this.fb.group({\n        firstname: [\"\", Validators.required],\n        lastname: [\"\", Validators.required],\n        email: [\"\", Validators.required]\n      });\n      const account$ = this.store.select(AccountStoreSelectors.getCurrentAccount);\n      account$.subscribe(currentAccount => {\n        if (currentAccount) {\n          this.accountForm.patchValue({\n            firstname: currentAccount.firstname,\n            lastname: currentAccount.lastname,\n            email: currentAccount.email\n          });\n        }\n      });\n    }\n    updateAccount() {\n      const updatedAccount = {\n        firstname: this.accountForm.get(\"firstname\").value,\n        lastname: this.accountForm.get(\"lastname\").value,\n        email: this.accountForm.get(\"email\").value\n      };\n      this.store.dispatch(new AccountStoreActions.UpdateAccount(updatedAccount));\n      this.accountForm.reset();\n    }\n  }\n  AccountEditComponent.ɵfac = function AccountEditComponent_Factory(t) {\n    return new (t || AccountEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n  };\n  AccountEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccountEditComponent,\n    selectors: [[\"app-account-edit\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[1, \"content\"], [1, \"mt-4\"], [1, \"form-inline\", \"mb-4\", 3, \"formGroup\", \"submit\"], [\"for\", \"Name\", 1, \"sr-only\"], [1, \"input-group\", \"mb-2\", \"mr-sm-2\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"placeholder\", \"Firstname\", 1, \"form-control\"], [\"for\", \"Phone\", 1, \"sr-only\"], [\"type\", \"text\", \"formControlName\", \"lastname\", \"placeholder\", \"Lastname\", 1, \"form-control\"], [\"for\", \"Address\", 1, \"sr-only\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", \"mb-2\"]],\n    template: function AccountEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n        i0.ɵɵtext(3, \"Edit Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function AccountEditComponent_Template_form_submit_4_listener() {\n          return ctx.updateAccount();\n        });\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Firstname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Lastname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4);\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Update Account\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return AccountEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}